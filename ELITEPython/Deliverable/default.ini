[input-config]
# The folder where the data resides
original_folder= Original_data
# Generated file with product related characteristics
product_related_characteristics_file = generated_productRelatedCharacteristics.csv
# Energy price in the period of the file
energy_price_file = generated_hourly_energy_price.csv
# If historical data is used, the historical downtime periods
historical_down_periods_file = historicalDownPeriods.csv
# The file with job info
job_info_file = generated_jobInfoProd.csv
# A file with failure info
failure_info_file = failureinfofile.xml
#failure_rate_file = hourlyFailureRate.csv

[output-config]
# Export?
export = True
# Export folder
export_folder = \Results
# The original jobs file
output_init = original_jobs.csv
# The file ith the final jobs
output_final = final_jobs.csv
# Interactive?
interactive = True

[scenario-config]
# Tests (choose between GA - Genetic Algorithm and BF - Brute Force)
test = GA
# Choose scenario
scenario = 1
# Should there be output validation
validation = False
# If the file already in the correct order?
pre_selection = False

# Configuration of the weights
# The energy weight, weight of due date and after date, weight of the failure, conversion weight
weight_energy = 1
weight_constraint = 10000
weight_failure = 0.100
weight_conversion = 3

# Configuration of the population
# The size of the population, the crossover rate, the mutation rate, the number of mutations, the number of iterations
pop_size = 12
crossover_rate = 0.4
mutation_rate = 0.4
num_mutations = 3
iterations = 40000

# Stop condition: num_iterations, end_value, abs_time
stop_condition = num_iterations
stop_value = 40000
# The duration string: duration, quantity
duration_str = duration
# The evolution method: roulette, random
evolution_method = roulette
# The working method: historical, expected
working_method = historical

# The algorithm will adapt between low and high with a step of step
adapt_ifin_low = 5000
adapt_ifin_high = 35000
adapt_ifin_step = 10000

# The start and end date of the required optimization period
[start-end]
start_year = 2016
start_month = 11
start_day = 3
start_hour = 0
start_minute = 0 
start_second = 0
end_year = 2016 
end_month = 11
end_day = 30
end_hour = 0
end_minute = 0
end_second = 0