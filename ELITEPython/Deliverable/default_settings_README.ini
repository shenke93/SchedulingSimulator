[input-config]
# The folder where the data resides
original_folder= Original_data
failure_info_path = productionfile
# Energy price in the period of the file
energy_price_file = % (failure_info_path)s/generated_hourly_energy_price.csv
# If historical data is used, the historical downtime periods
historical_down_periods_file = % (failure_info_path)s/historicalDownPeriods.csv
# The file with job info
job_info_file = % (failure_info_path)s/generated_jobInfoProd.csv
# A file with failure info
failure_xml_file = % (failure_info_path)s/outputfile.xml
# OPTIONAL files
# --------------
# A precedence file containing precedence info
precedence_file = % (failure_info_path)s/precedence_reverse.csv
# A breakdown file with info about the breakdown time
breakdown_record_file = % (failure_info_path)s/breakdownRecord.txt
# A urgent job info file with info about urgent jobs to be executed first
urgent_job_info_file = % (failure_info_path)s/urgentJob.csv

[output-config]
# Booleans: Choose between 'True' and 'False'. Other values might give unpredictable results.
interactive = True
# Export folder
export_folder = Scheduling\Results
# Option to export the output to a folder
export = True
# The original jobs file
output_init = original_jobs.csv
# The file with the final jobs
output_final = final_jobs.csv
# These files calculating the results for the original file and the best file
output_results_init = results_orig.csv
output_results_final = results_best.csv
# Export figures for usage in a paper
export_paper = False
# Export csv files for indeff
export_indeff = False
# Simplified small jobs file
output_init_small = original_jobs_small.csv
# Simplified final jobs file
output_final_small = final_jobs_small.csv
# Displays the schedule in the end

[scenario-config]
# Tests (choose between GA - Genetic Algorithm and BF - Brute Force)
test = GA
# Choose scenario 
# scenario 1 = using unit cost and production rate,
# scenario 2 = using fixed cost C1 and variable cost C2
scenario = 1
# Should there be output validation (validates if the due date and release dates are all correct)
validation = False
# If the file already in the correct order? Continuing from older schedule
pre_selection = False

# Configuration of the weights
# The weight of energy consumption
weight_energy = 1
# Weight for not getting due date or release date
weight_constraint = 10000
# Weight of failure
weight_failure = 1
weight_virtual_failure = 1
# Conversion weight
weight_conversion = 3
# Flowtime weight
weight_flowtime = 0

# Configuration of the population
# The size of the population, the crossover rate, the mutation rate, the number of mutations, the max number of iterations
pop_size = 12
# The crossover rate
crossover_rate = 0.4
# The mutation rate
mutation_rate = 0.4
# Number of mutations
num_mutations = 3
# Maximum number of iterations
iterations = 40000

# Stop condition: end_value, abs_time, num_iterations
# If stop_condition == num_iterations, determined by number iterations above
# If stop_condition = abs_time, determined by absolute time since start in seconds (value stop_value)
# If stop_condition = end_value, determined by the value of the optimisable number (mostly for testing), could run for ever
# The optimization can always be stopped by pressing 'c' or 'z' on the keyboard in the active terminal
stop_condition = num_iterations
stop_value = 40000
# The duration string: duration, quantity
duration_str = quantity
# The evolution method: roulette or random (roulette recommended)
evolution_method = roulette
# The working method: historical, expected (expected mode recommended)
working_method = expected

# add break time to the job file (in hours)
add_time = 0
# if method == PAR(eto) use this instead
add_time_list = 0, 2, 4, 6, 8, 10
# remove breaks from the job file
remove_all_breaks = True

# The algorithm will adapt if the following iterations are reached
adapt_ifin = 5000, 10000, 15000, 20000, 250000

# The start and end date of the required optimization period
[start-end]
start_year = 2016
start_month = 11
start_day = 3
start_hour = 0
start_minute = 0 
start_second = 0
end_year = 2016 
end_month = 11
end_day = 30
end_hour = 0
end_minute = 0
end_second = 0